{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","newTitle","hasTitleError","newDescription","newImgUrl","hasImgError","newImdbUrl","hasImdbUrlError","newImdbId","hasIdError","handleTitleChange","event","setState","target","value","handleDescriptionChange","handleImgUrlChange","handleImdbUrlChange","handleImdbIdChange","handleFormSubmit","preventDefault","props","onAdd","this","onSubmit","type","placeholder","onChange","classNames","error","style","color","Component","App","moviesFromServer","addMovie","newMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.00c0ee4f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport './NewMovie.scss';\nimport PropTypes from 'prop-types';\n\nexport class NewMovie extends Component {\n  state = {\n    newTitle: '',\n    hasTitleError: false,\n\n    newDescription: '',\n\n    newImgUrl: '',\n    hasImgError: false,\n\n    newImdbUrl: '',\n    hasImdbUrlError: false,\n\n    newImdbId: '',\n    hasIdError: false,\n  };\n\n  handleTitleChange = (event) => {\n    this.setState({\n      newTitle: event.target.value,\n      hasTitleError: false,\n    });\n  }\n\n  handleDescriptionChange = (event) => {\n    this.setState({\n      newDescription: event.target.value,\n    });\n  }\n\n  handleImgUrlChange = (event) => {\n    this.setState({\n      newImgUrl: event.target.value,\n      hasImgError: false,\n    });\n  }\n\n  handleImdbUrlChange = (event) => {\n    this.setState({\n      newImdbUrl: event.target.value,\n      hasImdbUrlError: false,\n    });\n  }\n\n  handleImdbIdChange = (event) => {\n    this.setState({\n      newImdbId: event.target.value,\n      hasIdError: false,\n    });\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const {\n      newTitle,\n      newDescription,\n      newImgUrl,\n      newImdbUrl,\n      newImdbId,\n    } = this.state;\n\n    this.setState(state => ({\n      hasTitleError: !state.newTitle,\n      hasImgError: !state.newImgUrl,\n      hasImdbUrlError: !state.newImdbUrl,\n      hasIdError: !state.newImdbId,\n    }));\n\n    if (!newTitle) {\n      return;\n    }\n\n    if (!newImgUrl) {\n      return;\n    }\n\n    if (!newImdbUrl) {\n      return;\n    }\n\n    if (!newImdbId) {\n      return;\n    }\n\n    this.props.onAdd(\n      newTitle,\n      newDescription,\n      newImgUrl,\n      newImdbUrl,\n      newImdbId,\n    );\n\n    this.setState({\n      newDescription: '',\n      newTitle: '',\n      newImgUrl: '',\n      newImdbUrl: '',\n      newImdbId: '',\n    });\n  };\n\n  render() {\n    const {\n      newTitle,\n      newDescription,\n      newImgUrl,\n      newImdbUrl,\n      newImdbId,\n      hasTitleError,\n      hasImgError,\n      hasImdbUrlError,\n      hasIdError,\n    } = this.state;\n\n    return (\n      <form onSubmit={this.handleFormSubmit}>\n        <h2>Add new movie</h2>\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Movie title\"\n            value={newTitle}\n            onChange={this.handleTitleChange}\n            className={classNames(`area`, {\n              error: hasTitleError,\n            })}\n          />\n          {hasTitleError && (\n            <span style={{ color: 'red' }}>Please enter the title</span>\n          )}\n        </div>\n\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Movie description\"\n            value={newDescription}\n            onChange={this.handleDescriptionChange}\n          />\n        </div>\n\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Movie image\"\n            value={newImgUrl}\n            onChange={this.handleImgUrlChange}\n            className={classNames(`area`, {\n              error: hasImgError,\n            })}\n          />\n          {hasImgError && (\n            <span style={{ color: 'red' }}>Please enter the image url</span>\n          )}\n        </div>\n\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Movie link\"\n            value={newImdbUrl}\n            onChange={this.handleImdbUrlChange}\n            className={classNames(`area`, {\n              error: hasImdbUrlError,\n            })}\n          />\n          {hasImdbUrlError && (\n            <span style={{ color: 'red' }}>Please enter the movie url</span>\n          )}\n        </div>\n\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Movie id\"\n            value={newImdbId}\n            onChange={this.handleImdbIdChange}\n            className={classNames(`area`, {\n              error: hasIdError,\n            })}\n          />\n          {hasIdError && (\n            <span style={{ color: 'red' }}>Please enter the id</span>\n          )}\n        </div>\n\n        <button type=\"submit\">Add movie</button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (title, description, imgUrl, imdbUrl, imdbId) => {\n    const newMovie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    this.setState(state => ({\n      movies: [...state.movies, newMovie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}